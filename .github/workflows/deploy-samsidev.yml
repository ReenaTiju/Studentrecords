name: Deploy samsidev branch

on:
  push:
    branches: [ samsidev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies (root)
        run: npm ci || npm install

      - name: Install backend deps
        run: |
          cd backend
          npm ci || npm install

      - name: Install frontend deps and build
        run: |
          cd frontend
          npm ci || npm install
          npm run build

      - name: Package deploy artifacts
        run: |
          rm -rf deploy && mkdir -p deploy
          cp -r backend deploy/backend
          cp -r frontend/build deploy/frontend
          cp package.json deploy/package.json
          cp ecosystem-samsidev.config.js deploy/ecosystem.config.js
          tar -czf deployment.tar.gz -C deploy .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/samsidev'
    env:
      DEPLOY_PATH: "/home/testatozas-atozascollegesamsi/htdocs/atozascollegesamsi.testatozas.in"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rebuild tar (actions do not share workspace between jobs)
        run: |
          npm ci || npm install
          cd backend && npm ci || npm install && cd ..
          cd frontend && npm ci || npm install && npm run build && cd ..
          rm -rf deploy && mkdir -p deploy
          cp -r backend deploy/backend
          cp -r frontend/build deploy/frontend
          cp package.json deploy/package.json
          cp ecosystem-samsidev.config.js deploy/ecosystem.config.js
          tar -czf deployment.tar.gz -C deploy .

      - name: Create deploy directory and test SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          timeout: 60s
          command_timeout: 10m
          script_stop: true
          script: |
            mkdir -p "/home/testatozas-atozascollegesamsi/htdocs/atozascollegesamsi.testatozas.in"
            echo "OK: /home/testatozas-atozascollegesamsi/htdocs/atozascollegesamsi.testatozas.in"

      - name: Upload package to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST_SAMSIDEV }}
          username: ${{ secrets.VPS_USERNAME_SAMSIDEV }}
          key: ${{ secrets.VPS_SSH_KEY_SAMSIDEV }}
          port: ${{ secrets.VPS_PORT || 22 }}
          source: "deployment.tar.gz"
          target: "/tmp/"

      - name: Extract and install on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST_SAMSIDEV }}
          username: ${{ secrets.VPS_USERNAME_SAMSIDEV }}
          key: ${{ secrets.VPS_SSH_KEY_SAMSIDEV }}
          port: ${{ secrets.VPS_PORT_SAMSIDEV || 22 }}
          timeout: 60s
          command_timeout: 15m
          script_stop: true
          script: |
            set -e
            mkdir -p "/home/testatozas-atozascollegesamsi/htdocs/atozascollegesamsi.testatozas.in"
            tar -xzf /tmp/deployment.tar.gz -C "/home/testatozas-atozascollegesamsi/htdocs/atozascollegesamsi.testatozas.in"
            rm /tmp/deployment.tar.gz
            cd "/home/testatozas-atozascollegesamsi/htdocs/atozascollegesamsi.testatozas.in"
            npm install --production --no-audit --no-fund || true
            cd backend && npm install --production --no-audit --no-fund || true
            # create .env if not exists and secrets are provided
            if [ ! -f .env ] && [ -n "${{ secrets.MONGODB_URI }}" ]; then
              cat > .env << EOF
            PORT=${{ secrets.BACKEND_PORT_SAMSIDEV || 5001 }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            NODE_ENV=production
            EOF
            fi
            # Restart with PM2 if available
            if command -v pm2 >/dev/null 2>&1 && [ -f "/home/testatozas-atozascollegesamsi/htdocs/atozascollegesamsi.testatozas.in/ecosystem.config.js" ]; then
              cd "/home/testatozas-atozascollegesamsi/htdocs/atozascollegesamsi.testatozas.in"
              pm2 restart student-records-backend-samsidev || pm2 start ecosystem.config.js || true
            else
              echo "PM2 not found or config missing; skipping process restart."
            fi

      - name: Health check (best effort)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST_SAMSIDEV }}
          username: ${{ secrets.VPS_USERNAME_SAMSIDEV }}
          key: ${{ secrets.VPS_SSH_KEY_SAMSIDEV }}
          port: ${{ secrets.VPS_PORT_SAMSIDEV || 22 }}
          script: |
            set +e
            curl -fsS http://localhost:${{ secrets.BACKEND_PORT_SAMSIDEV || 5001 }}/api/health || true
            echo "Health check executed."
